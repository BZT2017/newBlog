import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,o as i,b as l}from"./app-C6gSQRA4.js";const o={},r=l('<h2 id="字符类" tabindex="-1"><a class="header-anchor" href="#字符类"><span>字符类</span></a></h2><ol><li>大小写转换： <ol><li>charCodeAt()：获取字符的code，判断字符是大写还是小写</li><li>toUpperCase(): 将字符转换为大写</li><li>toLowerCase(): 将字符转换为小写</li></ol></li><li>分割字符 <ol><li>slice(start(不写默认为0),end):将字符串的start到end之间的字符提取，并返回新字符串</li><li>split(string,count):将字符串中的string截断，返回count个片段组成的数组<div class="hint-container tip"><p class="hint-container-title">提示</p><p>也可接受一个对象{<a href="str,count">symbol.split</a>}</p></div></li></ol></li><li></li></ol><h2 id="数组类" tabindex="-1"><a class="header-anchor" href="#数组类"><span>数组类</span></a></h2><ol><li>分割数组 <ol><li>slice(start,end):从start开始，到end结束，截取数组，返回新数组</li><li>splice(start,deletCount,item1,item2...):从start开始，删除deleteCount个元素，并用item替换</li></ol></li><li>插入与合并 <ul><li>插入： <ol><li>push: 从最后插入</li><li>unshift: 从最前面插入</li></ol></li></ul></li><li>功能类： <ol><li>排序： sort((a,b)=&gt;{})</li><li>过滤： filter((item)=&gt;{})</li><li>判断条件 <ul><li>some():只要有一个为true，就返回true</li><li>every():只要有一个为false，就返回false</li></ul></li></ol></li></ol>',4),a=[r];function n(s,c){return i(),e("div",null,a)}const h=t(o,[["render",n],["__file","api.html.vue"]]),m=JSON.parse('{"path":"/docs/program/algorithm/api.html","title":"常见算法使用的API","lang":"zh-CN","frontmatter":{"title":"常见算法使用的API","description":"字符类 大小写转换： charCodeAt()：获取字符的code，判断字符是大写还是小写 toUpperCase(): 将字符转换为大写 toLowerCase(): 将字符转换为小写 分割字符 slice(start(不写默认为0),end):将字符串的start到end之间的字符提取，并返回新字符串 split(string,count):将字符...","head":[["meta",{"property":"og:url","content":"https://bzt2017.github.io/docs/program/algorithm/api.html"}],["meta",{"property":"og:site_name","content":"Tiger"}],["meta",{"property":"og:title","content":"常见算法使用的API"}],["meta",{"property":"og:description","content":"字符类 大小写转换： charCodeAt()：获取字符的code，判断字符是大写还是小写 toUpperCase(): 将字符转换为大写 toLowerCase(): 将字符转换为小写 分割字符 slice(start(不写默认为0),end):将字符串的start到end之间的字符提取，并返回新字符串 split(string,count):将字符..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-17T09:53:22.000Z"}],["meta",{"property":"article:author","content":"Tiger"}],["meta",{"property":"article:modified_time","content":"2024-05-17T09:53:22.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"常见算法使用的API\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-17T09:53:22.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Tiger\\",\\"url\\":\\"https://bzt2017.github.io/myBlog/\\"}]}"]]},"headers":[{"level":2,"title":"字符类","slug":"字符类","link":"#字符类","children":[]},{"level":2,"title":"数组类","slug":"数组类","link":"#数组类","children":[]}],"git":{"createdTime":1715939602000,"updatedTime":1715939602000,"contributors":[{"name":"tiger-github","email":"634513456@qq.com","commits":1}]},"readingTime":{"minutes":0.84,"words":253},"filePathRelative":"docs/program/algorithm/api.md","localizedDate":"2024年5月17日","excerpt":"<h2>字符类</h2>\\n<ol>\\n<li>大小写转换：\\n<ol>\\n<li>charCodeAt()：获取字符的code，判断字符是大写还是小写</li>\\n<li>toUpperCase(): 将字符转换为大写</li>\\n<li>toLowerCase(): 将字符转换为小写</li>\\n</ol>\\n</li>\\n<li>分割字符\\n<ol>\\n<li>slice(start(不写默认为0),end):将字符串的start到end之间的字符提取，并返回新字符串</li>\\n<li>split(string,count):将字符串中的string截断，返回count个片段组成的数组<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">提示</p>\\n<p>也可接受一个对象{<a href=\\"str,count\\">symbol.split</a>}</p>\\n</div>\\n</li>\\n</ol>\\n</li>\\n<li></li>\\n</ol>","autoDesc":true}');export{h as comp,m as data};
