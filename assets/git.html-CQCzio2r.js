import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,o as t,b as e}from"./app-D0kEoSDD.js";const s={},i=e(`<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 摘选提交的代码</span>
<span class="token function">git</span> cherry-pick <span class="token operator">&lt;</span>你的提交SHA码<span class="token operator">&gt;</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="配置代理" tabindex="-1"><a class="header-anchor" href="#配置代理"><span>配置代理</span></a></h3><p>开启vpn提交代码会报错，这时候需要配置代理</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 配置全局代理(http)</span>
<span class="token function">git</span> config <span class="token parameter variable">--global</span> http.proxy <span class="token string">&#39;http://127.0.0.1:&lt;你的代理端口号&gt;&#39;</span>
<span class="token function">git</span> config <span class="token parameter variable">--global</span> https.proxy <span class="token string">&#39;http://127.0.0.1:&lt;你的代理端口号&gt;&#39;</span>
<span class="token comment"># 配置全局代理(socks)</span>
<span class="token function">git</span> config <span class="token parameter variable">--global</span> http.proxy <span class="token string">&#39;socks5://127.0.0.1:&lt;你的代理端口号&gt;&#39;</span>
<span class="token function">git</span> config <span class="token parameter variable">--global</span> https.proxy <span class="token string">&#39;socks5://127.0.0.1:&lt;你的代理端口号&gt;&#39;</span>
<span class="token comment"># 查看全局代理</span>
<span class="token function">git</span> config <span class="token parameter variable">--global</span> <span class="token parameter variable">--get</span> http.proxy
<span class="token function">git</span> config <span class="token parameter variable">--global</span> <span class="token parameter variable">--get</span> https.proxy
<span class="token comment"># 取消全局代理</span>
<span class="token function">git</span> config <span class="token parameter variable">--global</span> <span class="token parameter variable">--unset</span> http.proxy
<span class="token function">git</span> config <span class="token parameter variable">--global</span> <span class="token parameter variable">--unset</span> https.proxy
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>针对docker容器的代理配置：</p><p>在创建(run)容器的时候，加上 --net=host 这个选项，就可以实现容器内外共享网络，然后再在容器内部配置git，就可以实现容器内代理了</p></div>`,5),o=[i];function p(r,l){return t(),n("div",null,o)}const m=a(s,[["render",p],["__file","git.html.vue"]]),g=JSON.parse('{"path":"/docs/program/commands/git.html","title":"git常用命令行","lang":"zh-CN","frontmatter":{"title":"git常用命令行","date":"2022-06-21T00:00:00.000Z","description":"配置代理 开启vpn提交代码会报错，这时候需要配置代理 提示 针对docker容器的代理配置： 在创建(run)容器的时候，加上 --net=host 这个选项，就可以实现容器内外共享网络，然后再在容器内部配置git，就可以实现容器内代理了","head":[["meta",{"property":"og:url","content":"https://bzt2017.github.io/docs/program/commands/git.html"}],["meta",{"property":"og:site_name","content":"Tiger"}],["meta",{"property":"og:title","content":"git常用命令行"}],["meta",{"property":"og:description","content":"配置代理 开启vpn提交代码会报错，这时候需要配置代理 提示 针对docker容器的代理配置： 在创建(run)容器的时候，加上 --net=host 这个选项，就可以实现容器内外共享网络，然后再在容器内部配置git，就可以实现容器内代理了"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-09T05:44:43.000Z"}],["meta",{"property":"article:author","content":"Tiger"}],["meta",{"property":"article:published_time","content":"2022-06-21T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-07-09T05:44:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"git常用命令行\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-06-21T00:00:00.000Z\\",\\"dateModified\\":\\"2024-07-09T05:44:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Tiger\\",\\"url\\":\\"https://bzt2017.github.io/myBlog/\\"}]}"]]},"headers":[{"level":3,"title":"配置代理","slug":"配置代理","link":"#配置代理","children":[]}],"git":{"createdTime":1715939602000,"updatedTime":1720503883000,"contributors":[{"name":"tiger-github","email":"634513456@qq.com","commits":3}]},"readingTime":{"minutes":0.71,"words":213},"filePathRelative":"docs/program/commands/git.md","localizedDate":"2022年6月21日","excerpt":"<div class=\\"language-bash\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token comment\\"># 摘选提交的代码</span>\\n<span class=\\"token function\\">git</span> cherry-pick <span class=\\"token operator\\">&lt;</span>你的提交SHA码<span class=\\"token operator\\">&gt;</span>\\n\\n\\n</code></pre></div><h3>配置代理</h3>","autoDesc":true}');export{m as comp,g as data};
