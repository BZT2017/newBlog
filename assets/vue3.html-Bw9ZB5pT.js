import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,o,b as i}from"./app-CM1x2HIZ.js";const r={},n=i('<h2 id="vue3-的生命周期" tabindex="-1"><a class="header-anchor" href="#vue3-的生命周期"><span>vue3 的生命周期</span></a></h2><h2 id="虚拟-dom-与-diff-算法" tabindex="-1"><a class="header-anchor" href="#虚拟-dom-与-diff-算法"><span>虚拟 DOM 与 diff 算法</span></a></h2><p>虚拟 dom 就是通过 js 生成 ATS（抽象语法树）节点树，在很多需要转换的场景都会使用，例如 ts 转 js 等</p><p>还有一点是操作虚拟 dom 能提高性能</p><ol><li>增删改时，重绘与重排减少</li><li>使用 ref 查询时，减少了查询范围，提高查询性能</li></ol><p>diff 算法分两种情况</p><blockquote><p><strong>1. 未定义 key 时：新虚拟 dom 与旧虚拟 dom 从头部开始比较，</strong></p></blockquote><blockquote><p><strong>2. 定义了 key：</strong></p></blockquote>',8),a=[n];function d(l,p){return o(),t("div",null,a)}const m=e(r,[["render",d],["__file","vue3.html.vue"]]),u=JSON.parse('{"path":"/docs/interview/vue3.html","title":"vue3","lang":"zh-CN","frontmatter":{"title":"vue3","date":"2023-05-19T00:00:00.000Z","description":"vue3 的生命周期 虚拟 DOM 与 diff 算法 虚拟 dom 就是通过 js 生成 ATS（抽象语法树）节点树，在很多需要转换的场景都会使用，例如 ts 转 js 等 还有一点是操作虚拟 dom 能提高性能 增删改时，重绘与重排减少 使用 ref 查询时，减少了查询范围，提高查询性能 diff 算法分两种情况 1. 未定义 key 时：新虚拟 ...","head":[["meta",{"property":"og:url","content":"https://bzt2017.github.io/newBlog/docs/interview/vue3.html"}],["meta",{"property":"og:site_name","content":"Tiger"}],["meta",{"property":"og:title","content":"vue3"}],["meta",{"property":"og:description","content":"vue3 的生命周期 虚拟 DOM 与 diff 算法 虚拟 dom 就是通过 js 生成 ATS（抽象语法树）节点树，在很多需要转换的场景都会使用，例如 ts 转 js 等 还有一点是操作虚拟 dom 能提高性能 增删改时，重绘与重排减少 使用 ref 查询时，减少了查询范围，提高查询性能 diff 算法分两种情况 1. 未定义 key 时：新虚拟 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-17T09:53:22.000Z"}],["meta",{"property":"article:author","content":"Tiger"}],["meta",{"property":"article:published_time","content":"2023-05-19T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-17T09:53:22.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"vue3\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-05-19T00:00:00.000Z\\",\\"dateModified\\":\\"2024-05-17T09:53:22.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Tiger\\",\\"url\\":\\"https://bzt2017.github.io/myBlog/\\"}]}"]]},"headers":[{"level":2,"title":"vue3 的生命周期","slug":"vue3-的生命周期","link":"#vue3-的生命周期","children":[]},{"level":2,"title":"虚拟 DOM 与 diff 算法","slug":"虚拟-dom-与-diff-算法","link":"#虚拟-dom-与-diff-算法","children":[]}],"git":{"createdTime":1715939602000,"updatedTime":1715939602000,"contributors":[{"name":"tiger-github","email":"634513456@qq.com","commits":1}]},"readingTime":{"minutes":0.47,"words":140},"filePathRelative":"docs/interview/vue3.md","localizedDate":"2023年5月19日","excerpt":"<h2>vue3 的生命周期</h2>\\n<h2>虚拟 DOM 与 diff 算法</h2>\\n<p>虚拟 dom 就是通过 js 生成 ATS（抽象语法树）节点树，在很多需要转换的场景都会使用，例如 ts 转 js 等</p>\\n<p>还有一点是操作虚拟 dom 能提高性能</p>\\n<ol>\\n<li>增删改时，重绘与重排减少</li>\\n<li>使用 ref 查询时，减少了查询范围，提高查询性能</li>\\n</ol>\\n<p>diff 算法分两种情况</p>\\n<blockquote>\\n<p><strong>1. 未定义 key 时：新虚拟 dom 与旧虚拟 dom 从头部开始比较，</strong></p>\\n</blockquote>","autoDesc":true}');export{m as comp,u as data};
